plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom' version '0.5-SNAPSHOT' apply false
    id 'com.matthewprenger.cursegradle' version "1.4.0"
}

class Globals {
    static def baseVersion = "1.4.1+1.16"
    static def mcVersion = "1.16.4"
    static def yarnVersion = "+build.7"
}

archivesBaseName = "Server-Translations"

allprojects {
    apply plugin: 'fabric-loom'

    version = Globals.baseVersion
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group = "fr.catcore"

    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = 'Fabric'
            url = 'https://maven.fabricmc.net/'
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            name = 'mojang'
            url = 'https://libraries.minecraft.net/'
        }
        maven {
            name = 'legacy-fabric'
            url = 'https://dl.bintray.com/legacy-fabric/Legacy-Fabric-Maven'
        }
        mavenLocal()
    }

    dependencies {
        minecraft "com.mojang:minecraft:$Globals.mcVersion"
        mappings "net.fabricmc:yarn:${Globals.mcVersion}${Globals.yarnVersion}:v2"
        modCompile "net.fabricmc:fabric-loader:0.10.8"
        modCompile "net.fabricmc.fabric-api:fabric-api:0.26.0+1.16"
    }

    processResources {
        inputs.property "version", project.version

        from(sourceSets.main.resources.srcDirs) {
            include "fabric.mod.json"
            expand "version": project.version
        }

        from(sourceSets.main.resources.srcDirs) {
            exclude "fabric.mod.json"
        }
    }

    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this task, sources will not be generated.
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = "sources"
        from sourceSets.main.allSource
    }

    jar {
        from "LICENSE"
    }

    if (it.name != "api") remapJar.dependsOn ':api:remapJar'
}

repositories {
    flatDir {
        dirs 'api/build/libs'
    }
}

dependencies {
    implementation project(':api')
    include (name: 'server-translations-api', version: project(':api').version, ext: 'jar')
}
